from langchain_groq import ChatGroq #using these we can use llms
from langchain_tavily import TavilySearch #to search results from internet

from langgraph.prebuilt import create_react_agent  #to create agent
from langchain_core.messages.ai import AIMessage #to identify which message is written by AI and which is written by human.

from app.config.settings import settings

def get_response_from_ai_agents(llm_id,query,allow_search,system_prompt):
    llm=ChatGroq(model=llm_id)

    tools=[TavilySearch(max_results=2)] if allow_search else [] #only fetch top 2 results,if allowed by user

    agent=create_react_agent(
        models=llm,
        tools=tools,
        state_modifier=system_prompt
    )
    
    state = {"messages":query} #carry a list of all messages what user has said till now
    response = agent.invoke(state) #run ai agent with current conversation state
    messages = response.get("messages")
    ai_messages = [message.content for message in messages if isinstance(message,AIMessage)]

    return ai_messages[-1] if ai_messages else "No response generated by AI."